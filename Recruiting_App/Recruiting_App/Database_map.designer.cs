#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Recruiting_App
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AthleticRecruiting")]
	public partial class Database_mapDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAth_Event(Ath_Event instance);
    partial void UpdateAth_Event(Ath_Event instance);
    partial void DeleteAth_Event(Ath_Event instance);
    partial void InsertAthlete(Athlete instance);
    partial void UpdateAthlete(Athlete instance);
    partial void DeleteAthlete(Athlete instance);
    partial void InsertCoach(Coach instance);
    partial void UpdateCoach(Coach instance);
    partial void DeleteCoach(Coach instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertNote_Type(Note_Type instance);
    partial void UpdateNote_Type(Note_Type instance);
    partial void DeleteNote_Type(Note_Type instance);
    partial void InsertRecruit_Note(Recruit_Note instance);
    partial void UpdateRecruit_Note(Recruit_Note instance);
    partial void DeleteRecruit_Note(Recruit_Note instance);
    #endregion
		
		public Database_mapDataContext() : 
				base(global::Recruiting_App.Properties.Settings.Default.AthleticRecruitingConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Database_mapDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database_mapDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database_mapDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database_mapDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ath_Event> Ath_Events
		{
			get
			{
				return this.GetTable<Ath_Event>();
			}
		}
		
		public System.Data.Linq.Table<Athlete> Athletes
		{
			get
			{
				return this.GetTable<Athlete>();
			}
		}
		
		public System.Data.Linq.Table<Coach> Coaches
		{
			get
			{
				return this.GetTable<Coach>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<Note_Type> Note_Types
		{
			get
			{
				return this.GetTable<Note_Type>();
			}
		}
		
		public System.Data.Linq.Table<Recruit_Note> Recruit_Notes
		{
			get
			{
				return this.GetTable<Recruit_Note>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ath_Event")]
	public partial class Ath_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _Athlete_Id;
		
		private System.Nullable<int> _Event_Id;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<Athlete> _Athlete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAthlete_IdChanging(System.Nullable<int> value);
    partial void OnAthlete_IdChanged();
    partial void OnEvent_IdChanging(System.Nullable<int> value);
    partial void OnEvent_IdChanged();
    #endregion
		
		public Ath_Event()
		{
			this._Event = default(EntityRef<Event>);
			this._Athlete = default(EntityRef<Athlete>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Athlete_Id", DbType="Int", IsPrimaryKey=true)]
		public System.Nullable<int> Athlete_Id
		{
			get
			{
				return this._Athlete_Id;
			}
			set
			{
				if ((this._Athlete_Id != value))
				{
					if (this._Athlete.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAthlete_IdChanging(value);
					this.SendPropertyChanging();
					this._Athlete_Id = value;
					this.SendPropertyChanged("Athlete_Id");
					this.OnAthlete_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_Id", DbType="Int", IsPrimaryKey=true)]
		public System.Nullable<int> Event_Id
		{
			get
			{
				return this._Event_Id;
			}
			set
			{
				if ((this._Event_Id != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvent_IdChanging(value);
					this.SendPropertyChanging();
					this._Event_Id = value;
					this.SendPropertyChanged("Event_Id");
					this.OnEvent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Ath_Event", Storage="_Event", ThisKey="Event_Id", OtherKey="Event_id", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.Ath_Events = null;
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.Ath_Events = this;
						this._Event_Id = value.Event_id;
					}
					else
					{
						this._Event_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Athlete_Ath_Event", Storage="_Athlete", ThisKey="Athlete_Id", OtherKey="Athlete_id", IsForeignKey=true)]
		public Athlete Athlete
		{
			get
			{
				return this._Athlete.Entity;
			}
			set
			{
				Athlete previousValue = this._Athlete.Entity;
				if (((previousValue != value) 
							|| (this._Athlete.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Athlete.Entity = null;
						previousValue.Ath_Events.Remove(this);
					}
					this._Athlete.Entity = value;
					if ((value != null))
					{
						value.Ath_Events.Add(this);
						this._Athlete_Id = value.Athlete_id;
					}
					else
					{
						this._Athlete_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Athlete");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Athlete")]
	public partial class Athlete : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Athlete_id;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Class;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _Weight;
		
		private string _High_School;
		
		private string _High_School_Coach;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private System.Nullable<System.DateTime> _Date_Last_Contacted;
		
		private string _Skill_Rating;
		
		private System.Nullable<int> _Coach_id;
		
		private string _Phone_Number;
		
		private string _Email;
		
		private EntitySet<Recruit_Note> _Recruit_Notes;
		
		private EntitySet<Ath_Event> _Ath_Events;
		
		private EntityRef<Coach> _Coach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAthlete_idChanging(int value);
    partial void OnAthlete_idChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(System.Nullable<int> value);
    partial void OnWeightChanged();
    partial void OnHigh_SchoolChanging(string value);
    partial void OnHigh_SchoolChanged();
    partial void OnHigh_School_CoachChanging(string value);
    partial void OnHigh_School_CoachChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnDate_Last_ContactedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Last_ContactedChanged();
    partial void OnSkill_RatingChanging(string value);
    partial void OnSkill_RatingChanged();
    partial void OnCoach_idChanging(System.Nullable<int> value);
    partial void OnCoach_idChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Athlete()
		{
			this._Recruit_Notes = new EntitySet<Recruit_Note>(new Action<Recruit_Note>(this.attach_Recruit_Notes), new Action<Recruit_Note>(this.detach_Recruit_Notes));
			this._Ath_Events = new EntitySet<Ath_Event>(new Action<Ath_Event>(this.attach_Ath_Events), new Action<Ath_Event>(this.detach_Ath_Events));
			this._Coach = default(EntityRef<Coach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Athlete_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Athlete_id
		{
			get
			{
				return this._Athlete_id;
			}
			set
			{
				if ((this._Athlete_id != value))
				{
					this.OnAthlete_idChanging(value);
					this.SendPropertyChanging();
					this._Athlete_id = value;
					this.SendPropertyChanged("Athlete_id");
					this.OnAthlete_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[First Name]", Storage="_First_Name", DbType="NVarChar(255)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Last Name]", Storage="_Last_Name", DbType="NVarChar(255)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(255)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int")]
		public System.Nullable<int> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[High School]", Storage="_High_School", DbType="NVarChar(255)")]
		public string High_School
		{
			get
			{
				return this._High_School;
			}
			set
			{
				if ((this._High_School != value))
				{
					this.OnHigh_SchoolChanging(value);
					this.SendPropertyChanging();
					this._High_School = value;
					this.SendPropertyChanged("High_School");
					this.OnHigh_SchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[High School Coach]", Storage="_High_School_Coach", DbType="NVarChar(255)")]
		public string High_School_Coach
		{
			get
			{
				return this._High_School_Coach;
			}
			set
			{
				if ((this._High_School_Coach != value))
				{
					this.OnHigh_School_CoachChanging(value);
					this.SendPropertyChanging();
					this._High_School_Coach = value;
					this.SendPropertyChanged("High_School_Coach");
					this.OnHigh_School_CoachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(255)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Date Last Contacted]", Storage="_Date_Last_Contacted", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Last_Contacted
		{
			get
			{
				return this._Date_Last_Contacted;
			}
			set
			{
				if ((this._Date_Last_Contacted != value))
				{
					this.OnDate_Last_ContactedChanging(value);
					this.SendPropertyChanging();
					this._Date_Last_Contacted = value;
					this.SendPropertyChanged("Date_Last_Contacted");
					this.OnDate_Last_ContactedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Skill Rating]", Storage="_Skill_Rating", DbType="NVarChar(255)")]
		public string Skill_Rating
		{
			get
			{
				return this._Skill_Rating;
			}
			set
			{
				if ((this._Skill_Rating != value))
				{
					this.OnSkill_RatingChanging(value);
					this.SendPropertyChanging();
					this._Skill_Rating = value;
					this.SendPropertyChanged("Skill_Rating");
					this.OnSkill_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coach_id", DbType="Int")]
		public System.Nullable<int> Coach_id
		{
			get
			{
				return this._Coach_id;
			}
			set
			{
				if ((this._Coach_id != value))
				{
					if (this._Coach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoach_idChanging(value);
					this.SendPropertyChanging();
					this._Coach_id = value;
					this.SendPropertyChanged("Coach_id");
					this.OnCoach_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Phone Number]", Storage="_Phone_Number", DbType="NVarChar(255)")]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Athlete_Recruit_Note", Storage="_Recruit_Notes", ThisKey="Athlete_id", OtherKey="Athlete_id")]
		public EntitySet<Recruit_Note> Recruit_Notes
		{
			get
			{
				return this._Recruit_Notes;
			}
			set
			{
				this._Recruit_Notes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Athlete_Ath_Event", Storage="_Ath_Events", ThisKey="Athlete_id", OtherKey="Athlete_Id")]
		public EntitySet<Ath_Event> Ath_Events
		{
			get
			{
				return this._Ath_Events;
			}
			set
			{
				this._Ath_Events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coach_Athlete", Storage="_Coach", ThisKey="Coach_id", OtherKey="Coach_id", IsForeignKey=true)]
		public Coach Coach
		{
			get
			{
				return this._Coach.Entity;
			}
			set
			{
				Coach previousValue = this._Coach.Entity;
				if (((previousValue != value) 
							|| (this._Coach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Coach.Entity = null;
						previousValue.Athletes.Remove(this);
					}
					this._Coach.Entity = value;
					if ((value != null))
					{
						value.Athletes.Add(this);
						this._Coach_id = value.Coach_id;
					}
					else
					{
						this._Coach_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Coach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recruit_Notes(Recruit_Note entity)
		{
			this.SendPropertyChanging();
			entity.Athlete = this;
		}
		
		private void detach_Recruit_Notes(Recruit_Note entity)
		{
			this.SendPropertyChanging();
			entity.Athlete = null;
		}
		
		private void attach_Ath_Events(Ath_Event entity)
		{
			this.SendPropertyChanging();
			entity.Athlete = this;
		}
		
		private void detach_Ath_Events(Ath_Event entity)
		{
			this.SendPropertyChanging();
			entity.Athlete = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coach")]
	public partial class Coach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Coach_id;
		
		private string _Last_Name;
		
		private EntitySet<Recruit_Note> _Recruit_Notes;
		
		private EntitySet<Athlete> _Athletes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCoach_idChanging(int value);
    partial void OnCoach_idChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    #endregion
		
		public Coach()
		{
			this._Recruit_Notes = new EntitySet<Recruit_Note>(new Action<Recruit_Note>(this.attach_Recruit_Notes), new Action<Recruit_Note>(this.detach_Recruit_Notes));
			this._Athletes = new EntitySet<Athlete>(new Action<Athlete>(this.attach_Athletes), new Action<Athlete>(this.detach_Athletes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coach_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Coach_id
		{
			get
			{
				return this._Coach_id;
			}
			set
			{
				if ((this._Coach_id != value))
				{
					this.OnCoach_idChanging(value);
					this.SendPropertyChanging();
					this._Coach_id = value;
					this.SendPropertyChanged("Coach_id");
					this.OnCoach_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Last Name]", Storage="_Last_Name", DbType="NVarChar(255)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coach_Recruit_Note", Storage="_Recruit_Notes", ThisKey="Coach_id", OtherKey="Coach_id")]
		public EntitySet<Recruit_Note> Recruit_Notes
		{
			get
			{
				return this._Recruit_Notes;
			}
			set
			{
				this._Recruit_Notes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coach_Athlete", Storage="_Athletes", ThisKey="Coach_id", OtherKey="Coach_id")]
		public EntitySet<Athlete> Athletes
		{
			get
			{
				return this._Athletes;
			}
			set
			{
				this._Athletes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recruit_Notes(Recruit_Note entity)
		{
			this.SendPropertyChanging();
			entity.Coach = this;
		}
		
		private void detach_Recruit_Notes(Recruit_Note entity)
		{
			this.SendPropertyChanging();
			entity.Coach = null;
		}
		
		private void attach_Athletes(Athlete entity)
		{
			this.SendPropertyChanging();
			entity.Coach = this;
		}
		
		private void detach_Athletes(Athlete entity)
		{
			this.SendPropertyChanging();
			entity.Coach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Event_id;
		
		private string _Event_Name;
		
		private EntityRef<Ath_Event> _Ath_Events;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEvent_idChanging(int value);
    partial void OnEvent_idChanged();
    partial void OnEvent_NameChanging(string value);
    partial void OnEvent_NameChanged();
    #endregion
		
		public Event()
		{
			this._Ath_Events = default(EntityRef<Ath_Event>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Event_id
		{
			get
			{
				return this._Event_id;
			}
			set
			{
				if ((this._Event_id != value))
				{
					this.OnEvent_idChanging(value);
					this.SendPropertyChanging();
					this._Event_id = value;
					this.SendPropertyChanged("Event_id");
					this.OnEvent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Event Name]", Storage="_Event_Name", DbType="NVarChar(255)")]
		public string Event_Name
		{
			get
			{
				return this._Event_Name;
			}
			set
			{
				if ((this._Event_Name != value))
				{
					this.OnEvent_NameChanging(value);
					this.SendPropertyChanging();
					this._Event_Name = value;
					this.SendPropertyChanged("Event_Name");
					this.OnEvent_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Ath_Event", Storage="_Ath_Events", ThisKey="Event_id", OtherKey="Event_Id", IsUnique=true, IsForeignKey=false)]
		public Ath_Event Ath_Events
		{
			get
			{
				return this._Ath_Events.Entity;
			}
			set
			{
				Ath_Event previousValue = this._Ath_Events.Entity;
				if (((previousValue != value) 
							|| (this._Ath_Events.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ath_Events.Entity = null;
						previousValue.Event = null;
					}
					this._Ath_Events.Entity = value;
					if ((value != null))
					{
						value.Event = this;
					}
					this.SendPropertyChanged("Ath_Events");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Note_Type")]
	public partial class Note_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Note_Type_id;
		
		private string _Note_Type_Name;
		
		private EntitySet<Recruit_Note> _Recruit_Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNote_Type_idChanging(int value);
    partial void OnNote_Type_idChanged();
    partial void OnNote_Type_NameChanging(string value);
    partial void OnNote_Type_NameChanged();
    #endregion
		
		public Note_Type()
		{
			this._Recruit_Notes = new EntitySet<Recruit_Note>(new Action<Recruit_Note>(this.attach_Recruit_Notes), new Action<Recruit_Note>(this.detach_Recruit_Notes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note_Type_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Note_Type_id
		{
			get
			{
				return this._Note_Type_id;
			}
			set
			{
				if ((this._Note_Type_id != value))
				{
					this.OnNote_Type_idChanging(value);
					this.SendPropertyChanging();
					this._Note_Type_id = value;
					this.SendPropertyChanged("Note_Type_id");
					this.OnNote_Type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Note Type Name]", Storage="_Note_Type_Name", DbType="NVarChar(255)")]
		public string Note_Type_Name
		{
			get
			{
				return this._Note_Type_Name;
			}
			set
			{
				if ((this._Note_Type_Name != value))
				{
					this.OnNote_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Note_Type_Name = value;
					this.SendPropertyChanged("Note_Type_Name");
					this.OnNote_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_Type_Recruit_Note", Storage="_Recruit_Notes", ThisKey="Note_Type_id", OtherKey="Note_type_id")]
		public EntitySet<Recruit_Note> Recruit_Notes
		{
			get
			{
				return this._Recruit_Notes;
			}
			set
			{
				this._Recruit_Notes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recruit_Notes(Recruit_Note entity)
		{
			this.SendPropertyChanging();
			entity.Note_Type = this;
		}
		
		private void detach_Recruit_Notes(Recruit_Note entity)
		{
			this.SendPropertyChanging();
			entity.Note_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recruit_Notes")]
	public partial class Recruit_Note : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Note_id;
		
		private System.Nullable<System.DateTime> _Date_of_Note;
		
		private string _Note;
		
		private System.Nullable<int> _Note_type_id;
		
		private System.Nullable<int> _Coach_id;
		
		private System.Nullable<int> _Athlete_id;
		
		private EntityRef<Note_Type> _Note_Type;
		
		private EntityRef<Coach> _Coach;
		
		private EntityRef<Athlete> _Athlete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNote_idChanging(int value);
    partial void OnNote_idChanged();
    partial void OnDate_of_NoteChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_of_NoteChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnNote_type_idChanging(System.Nullable<int> value);
    partial void OnNote_type_idChanged();
    partial void OnCoach_idChanging(System.Nullable<int> value);
    partial void OnCoach_idChanged();
    partial void OnAthlete_idChanging(System.Nullable<int> value);
    partial void OnAthlete_idChanged();
    #endregion
		
		public Recruit_Note()
		{
			this._Note_Type = default(EntityRef<Note_Type>);
			this._Coach = default(EntityRef<Coach>);
			this._Athlete = default(EntityRef<Athlete>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Note_id
		{
			get
			{
				return this._Note_id;
			}
			set
			{
				if ((this._Note_id != value))
				{
					this.OnNote_idChanging(value);
					this.SendPropertyChanging();
					this._Note_id = value;
					this.SendPropertyChanged("Note_id");
					this.OnNote_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Date of Note]", Storage="_Date_of_Note", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_of_Note
		{
			get
			{
				return this._Date_of_Note;
			}
			set
			{
				if ((this._Date_of_Note != value))
				{
					this.OnDate_of_NoteChanging(value);
					this.SendPropertyChanging();
					this._Date_of_Note = value;
					this.SendPropertyChanged("Date_of_Note");
					this.OnDate_of_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note_type_id", DbType="Int")]
		public System.Nullable<int> Note_type_id
		{
			get
			{
				return this._Note_type_id;
			}
			set
			{
				if ((this._Note_type_id != value))
				{
					if (this._Note_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNote_type_idChanging(value);
					this.SendPropertyChanging();
					this._Note_type_id = value;
					this.SendPropertyChanged("Note_type_id");
					this.OnNote_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coach_id", DbType="Int")]
		public System.Nullable<int> Coach_id
		{
			get
			{
				return this._Coach_id;
			}
			set
			{
				if ((this._Coach_id != value))
				{
					if (this._Coach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoach_idChanging(value);
					this.SendPropertyChanging();
					this._Coach_id = value;
					this.SendPropertyChanged("Coach_id");
					this.OnCoach_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Athlete_id", DbType="Int")]
		public System.Nullable<int> Athlete_id
		{
			get
			{
				return this._Athlete_id;
			}
			set
			{
				if ((this._Athlete_id != value))
				{
					if (this._Athlete.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAthlete_idChanging(value);
					this.SendPropertyChanging();
					this._Athlete_id = value;
					this.SendPropertyChanged("Athlete_id");
					this.OnAthlete_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_Type_Recruit_Note", Storage="_Note_Type", ThisKey="Note_type_id", OtherKey="Note_Type_id", IsForeignKey=true)]
		public Note_Type Note_Type
		{
			get
			{
				return this._Note_Type.Entity;
			}
			set
			{
				Note_Type previousValue = this._Note_Type.Entity;
				if (((previousValue != value) 
							|| (this._Note_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Note_Type.Entity = null;
						previousValue.Recruit_Notes.Remove(this);
					}
					this._Note_Type.Entity = value;
					if ((value != null))
					{
						value.Recruit_Notes.Add(this);
						this._Note_type_id = value.Note_Type_id;
					}
					else
					{
						this._Note_type_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Note_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coach_Recruit_Note", Storage="_Coach", ThisKey="Coach_id", OtherKey="Coach_id", IsForeignKey=true)]
		public Coach Coach
		{
			get
			{
				return this._Coach.Entity;
			}
			set
			{
				Coach previousValue = this._Coach.Entity;
				if (((previousValue != value) 
							|| (this._Coach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Coach.Entity = null;
						previousValue.Recruit_Notes.Remove(this);
					}
					this._Coach.Entity = value;
					if ((value != null))
					{
						value.Recruit_Notes.Add(this);
						this._Coach_id = value.Coach_id;
					}
					else
					{
						this._Coach_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Coach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Athlete_Recruit_Note", Storage="_Athlete", ThisKey="Athlete_id", OtherKey="Athlete_id", IsForeignKey=true)]
		public Athlete Athlete
		{
			get
			{
				return this._Athlete.Entity;
			}
			set
			{
				Athlete previousValue = this._Athlete.Entity;
				if (((previousValue != value) 
							|| (this._Athlete.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Athlete.Entity = null;
						previousValue.Recruit_Notes.Remove(this);
					}
					this._Athlete.Entity = value;
					if ((value != null))
					{
						value.Recruit_Notes.Add(this);
						this._Athlete_id = value.Athlete_id;
					}
					else
					{
						this._Athlete_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Athlete");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
